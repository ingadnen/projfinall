{"ast":null,"code":"var _jsxFileName = \"/Users/m/projetfinal/src/navbar.jsx\";\nimport React, { Component } from \"react\";\nimport \"./navbar.css\";\nconst brand = window.innerWidth > 600 ? \"Pathfinding Visualizer\" : \"Pathfinder\";\n\nclass NavBar extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      algorithm: \"Visualize Algorithm\",\n      pathState: false,\n      speedState: \"Speed\"\n    };\n  }\n\n  selectAlgorithm(selection) {\n    if (this.props.visualizingAlgorithm) {\n      return;\n    }\n\n    if (selection === this.state.algorithm || this.state.algorithm === \"Visualize Algorithm\" || this.state.algorithm === \"Select an Algorithm!\") {\n      this.setState({\n        algorithm: selection\n      });\n    } else if (this.state.pathState) {\n      this.clearPath();\n      this.setState({\n        algorithm: selection\n      });\n    } else {\n      this.setState({\n        algorithm: selection\n      });\n    }\n  }\n\n  visualizeAlgorithm() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    if (this.state.pathState) {\n      this.clearTemp();\n      return;\n    }\n\n    if (this.state.algorithm === \"Visualize Algorithm\" || this.state.algorithm === \"Select an Algorithm!\") {\n      this.setState({\n        algorithm: \"Select an Algorithm!\"\n      });\n    } else {\n      this.setState({\n        pathState: true\n      });\n      if (this.state.algorithm === \"Visualize Dijkstra\") this.props.visualizeDijkstra();else if (this.state.algorithm === \"Visualize A*\") this.props.visualizeAStar();else if (this.state.algorithm === \"Visualize Greedy BFS\") this.props.visualizeGreedyBFS();else if (this.state.algorithm === \"Visualize Bidirectional Greedy\") this.props.visualizeBidirectionalGreedySearch();else if (this.state.algorithm === \"Visualize Breadth First Search\") this.props.visualizeBFS();else if (this.state.algorithm === \"Visualize Depth First Search\") this.props.visualizeDFS();else if (this.state.algorithm === \"Visualize Random Walk\") this.props.visualizeRandomWalk();\n    }\n  }\n\n  generateMaze() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    if (this.state.mazeState || this.state.pathState) {\n      this.clearTemp();\n    }\n\n    if (this.state.maze === \"Generate Maze\" || this.state.maze === \"Select a Maze!\") {\n      this.setState({\n        maze: \"Select a Maze!\"\n      });\n    } else {\n      this.setState({\n        mazeState: true\n      });\n      if (this.state.maze === \"Generate Random Maze\") this.props.generateRandomMaze();else if (this.state.maze === \"Generate Recursive Maze\") this.props.generateRecursiveDivisionMaze();else if (this.state.maze === \"Generate Vertical Maze\") this.props.generateVerticalMaze();else if (this.state.maze === \"Generate Horizontal Maze\") this.props.generateHorizontalMaze();\n    }\n  }\n\n  clearGrid() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearGrid();\n    this.setState({\n      algorithm: \"Visualize Algorithm\",\n      maze: \"Generate Maze\",\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  clearPath() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearPath();\n    this.setState({\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  clearTemp() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearGrid();\n    this.setState({\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  changeSpeed(speed) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    let value = [10, 10];\n    if (speed === \"Slow\") value = [50, 30];else if (speed === \"Medium\") value = [25, 20];else if (speed === \"Fast\") value = [10, 10];\n    this.setState({\n      speedState: speed\n    });\n    this.props.updateSpeed(value[0], value[1]);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-expand navbar-dark bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand h1 mb-0\",\n      href: \"https://github.com/ingadnen/projetfinal.git\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, brand), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar-collapse\",\n      id: \"navbarNavDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"Algorithms\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Dijkstra\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"Dijkstra's Algorithm\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize A*\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"A* Algorithm\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Greedy BFS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, \"Greedy Best First Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Bidirectional Greedy\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, \"Bidirectional Greedy Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Breadth First Search\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, \"Breadth First Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Depth First Search\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, \"Depth First Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Random Walk\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, \"Random Walk\"))), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => this.visualizeAlgorithm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, this.state.algorithm)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, \"Mazes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectMaze(\"Generate Random Maze\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }, \"Random Maze\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectMaze(\"Generate Recursive Maze\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 37\n      }\n    }, \"Recursive Division Maze\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectMaze(\"Generate Vertical Maze\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, \"Vertical Division Maze\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectMaze(\"Generate Horizontal Maze\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 37\n      }\n    }, \"Horizontal Division Maze\"))), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => this.generateMaze(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, this.state.maze)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => this.clearGrid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"Clear Gird\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, this.state.speedState), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Slow\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    }, \"Slow\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Medium\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Fast\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    }, \"Fast\"))), \" \"))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/m/projetfinal/src/navbar.jsx"],"names":["React","Component","brand","window","innerWidth","NavBar","state","algorithm","pathState","speedState","selectAlgorithm","selection","props","visualizingAlgorithm","setState","clearPath","visualizeAlgorithm","generatingMaze","clearTemp","visualizeDijkstra","visualizeAStar","visualizeGreedyBFS","visualizeBidirectionalGreedySearch","visualizeBFS","visualizeDFS","visualizeRandomWalk","generateMaze","mazeState","maze","generateRandomMaze","generateRecursiveDivisionMaze","generateVerticalMaze","generateHorizontalMaze","clearGrid","changeSpeed","speed","value","updateSpeed","render","selectMaze"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./navbar.css\";\n\nconst brand = window.innerWidth > 600 ? \"Pathfinding Visualizer\" : \"Pathfinder\";\n\nclass NavBar extends Component {\n    state = {\n        algorithm: \"Visualize Algorithm\",\n        pathState: false,\n        speedState: \"Speed\",\n    };\n\n    selectAlgorithm(selection) {\n        if (this.props.visualizingAlgorithm) {\n            return;\n        }\n        if (\n            selection === this.state.algorithm ||\n            this.state.algorithm === \"Visualize Algorithm\" ||\n            this.state.algorithm === \"Select an Algorithm!\"\n        ) {\n            this.setState({ algorithm: selection });\n        } else if (this.state.pathState) {\n            this.clearPath();\n            this.setState({ algorithm: selection });\n        } else {\n            this.setState({ algorithm: selection });\n        }\n    }\n\n   \n\n    visualizeAlgorithm() {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        if (this.state.pathState) {\n            this.clearTemp();\n            return;\n        }\n        if (\n            this.state.algorithm === \"Visualize Algorithm\" ||\n            this.state.algorithm === \"Select an Algorithm!\"\n        ) {\n            this.setState({ algorithm: \"Select an Algorithm!\" });\n        } else {\n            this.setState({ pathState: true });\n            if (this.state.algorithm === \"Visualize Dijkstra\")\n                this.props.visualizeDijkstra();\n            else if (this.state.algorithm === \"Visualize A*\")\n                this.props.visualizeAStar();\n            else if (this.state.algorithm === \"Visualize Greedy BFS\")\n                this.props.visualizeGreedyBFS();\n            else if (this.state.algorithm === \"Visualize Bidirectional Greedy\")\n                this.props.visualizeBidirectionalGreedySearch();\n            else if (this.state.algorithm === \"Visualize Breadth First Search\")\n                this.props.visualizeBFS();\n            else if (this.state.algorithm === \"Visualize Depth First Search\")\n                this.props.visualizeDFS();\n            else if (this.state.algorithm === \"Visualize Random Walk\")\n                this.props.visualizeRandomWalk();\n        }\n    }\n\n    generateMaze() {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        if (this.state.mazeState || this.state.pathState) {\n            this.clearTemp();\n        }\n        if (\n            this.state.maze === \"Generate Maze\" ||\n            this.state.maze === \"Select a Maze!\"\n        ) {\n            this.setState({ maze: \"Select a Maze!\" });\n        } else {\n            this.setState({ mazeState: true });\n            if (this.state.maze === \"Generate Random Maze\")\n                this.props.generateRandomMaze();\n            else if (this.state.maze === \"Generate Recursive Maze\")\n                this.props.generateRecursiveDivisionMaze();\n            else if (this.state.maze === \"Generate Vertical Maze\")\n                this.props.generateVerticalMaze();\n            else if (this.state.maze === \"Generate Horizontal Maze\")\n                this.props.generateHorizontalMaze();\n        }\n    }\n\n    clearGrid() {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        this.props.clearGrid();\n        this.setState({\n            algorithm: \"Visualize Algorithm\",\n            maze: \"Generate Maze\",\n            pathState: false,\n            mazeState: false,\n        });\n    }\n\n    clearPath() {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        this.props.clearPath();\n        this.setState({\n            pathState: false,\n            mazeState: false,\n        });\n    }\n\n    clearTemp() {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        this.props.clearGrid();\n        this.setState({\n            pathState: false,\n            mazeState: false,\n        });\n    }\n\n    changeSpeed(speed) {\n        if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n            return;\n        }\n        let value = [10, 10];\n        if (speed === \"Slow\") value = [50, 30];\n        else if (speed === \"Medium\") value = [25, 20];\n        else if (speed === \"Fast\") value = [10, 10];\n        this.setState({ speedState: speed });\n        this.props.updateSpeed(value[0], value[1]);\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                <a\n                    className=\"navbar-brand h1 mb-0\"\n                    href=\"https://github.com/ingadnen/projetfinal.git\"\n                >\n                    {brand}\n                </a>\n                <div className=\"navbar-collapse\" id=\"navbarNavDropdown\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <div className=\"dropdown\">\n                                <button\n                                    className=\"btn btn-light dropdown-toggle\"\n                                    type=\"button\"\n                                    id=\"dropdownMenu1\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Algorithms\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectAlgorithm(\"Visualize Dijkstra\")}\n                                    >\n                                        Dijkstra's Algorithm\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectAlgorithm(\"Visualize A*\")}\n                                    >\n                                        A* Algorithm\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectAlgorithm(\"Visualize Greedy BFS\")}\n                                    >\n                                        Greedy Best First Search\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() =>\n                                            this.selectAlgorithm(\"Visualize Bidirectional Greedy\")\n                                        }\n                                    >\n                                        Bidirectional Greedy Search\n                                    </button>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() =>\n                                            this.selectAlgorithm(\"Visualize Breadth First Search\")\n                                        }\n                                    >\n                                        Breadth First Search\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() =>\n                                            this.selectAlgorithm(\"Visualize Depth First Search\")\n                                        }\n                                    >\n                                        Depth First Search\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() =>\n                                            this.selectAlgorithm(\"Visualize Random Walk\")\n                                        }\n                                    >\n                                        Random Walk\n                                    </button>\n                                </div>\n                            </div>{\" \"}\n                        </li>\n                        <li>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-success\"\n                                onClick={() => this.visualizeAlgorithm()}\n                            >\n                                {this.state.algorithm}\n                            </button>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <div className=\"dropdown\">\n                                <button\n                                    className=\"btn btn-light dropdown-toggle\"\n                                    type=\"button\"\n                                    id=\"dropdownMenu1\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Mazes\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectMaze(\"Generate Random Maze\")}\n                                    >\n                                        Random Maze\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectMaze(\"Generate Recursive Maze\")}\n                                    >\n                                        Recursive Division Maze\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectMaze(\"Generate Vertical Maze\")}\n                                    >\n                                        Vertical Division Maze\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectMaze(\"Generate Horizontal Maze\")}\n                                    >\n                                        Horizontal Division Maze\n                                    </button>\n                                </div>\n                            </div>{\" \"}\n                        </li>\n                        <li>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-success\"\n                                onClick={() => this.generateMaze()}\n                            >\n                                {this.state.maze}\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-danger\"\n                                onClick={() => this.clearGrid()}\n                            >\n                                Clear Gird\n                            </button>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <div className=\"dropdown\">\n                                <button\n                                    className=\"btn btn-info dropdown-toggle\"\n                                    type=\"button\"\n                                    id=\"dropdownMenu1\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    {this.state.speedState}\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.changeSpeed(\"Slow\")}\n                                    >\n                                        Slow\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.changeSpeed(\"Medium\")}\n                                    >\n                                        Medium\n                                    </button>\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.changeSpeed(\"Fast\")}\n                                    >\n                                        Fast\n                                    </button>\n                                </div>\n                            </div>{\" \"}\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}