{"ast":null,"code":"var _jsxFileName = \"/Users/m/projetfinal/src/point.jsx\";\nimport React, { Component } from \"react\";\nimport \"./point.css\";\n\nclass Point extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      row,\n      col,\n      isStart,\n      isEnd,\n      isChecked,\n      isShortest,\n      width,\n      height,\n      numRows,\n      numColumns\n    } = this.props;\n    const extraClass = isStart ? \"point point-start\" : isEnd ? \"point point-finish\" : isShortest ? \"point point-shortest-path\" : isChecked ? \"point point-visited\" : \"point\";\n    let cercleWidth = Math.floor((width - 15) / numColumns);\n    let cercleHeight;\n\n    if (width > 1500) {\n      cercleHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 1000) {\n      cercleHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 500) {\n      cercleHeight = Math.floor((height - 60) / numRows);\n    } else if (width > 0) {\n      cercleHeight = Math.floor((height - 50) / numRows);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: `point-${row}-${col}`,\n      className: `${extraClass}`,\n      style: {\n        \"--width\": `${cercleWidth}px`,\n        \"--height\": `${cercleHeight}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Point;","map":{"version":3,"sources":["/Users/m/projetfinal/src/point.jsx"],"names":["React","Component","Point","constructor","props","state","render","row","col","isStart","isEnd","isChecked","isShortest","width","height","numRows","numColumns","extraClass","cercleWidth","Math","floor","cercleHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,GADE;AAEFC,MAAAA,GAFE;AAGFC,MAAAA,OAHE;AAIFC,MAAAA,KAJE;AAKFC,MAAAA,SALE;AAMFC,MAAAA,UANE;AAOFC,MAAAA,KAPE;AAQFC,MAAAA,MARE;AASFC,MAAAA,OATE;AAUFC,MAAAA;AAVE,QAWF,KAAKZ,KAXT;AAaA,UAAMa,UAAU,GAAGR,OAAO,GACpB,mBADoB,GAEpBC,KAAK,GACD,oBADC,GAEGE,UAAU,GACN,2BADM,GAEND,SAAS,GACL,qBADK,GAEL,OARtB;AAUA,QAAIO,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACP,KAAK,GAAG,EAAT,IAAeG,UAA1B,CAAlB;AACA,QAAIK,YAAJ;;AACA,QAAIR,KAAK,GAAG,IAAZ,EAAkB;AACdQ,MAAAA,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAf;AACH,KAFD,MAEO,IAAIF,KAAK,GAAG,IAAZ,EAAkB;AACrBQ,MAAAA,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAf;AACH,KAFM,MAEA,IAAIF,KAAK,GAAG,GAAZ,EAAiB;AACpBQ,MAAAA,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAf;AACH,KAFM,MAEA,IAAIF,KAAK,GAAG,CAAZ,EAAe;AAClBQ,MAAAA,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAf;AACH;;AAED,wBACI;AACI,MAAA,EAAE,EAAG,SAAQR,GAAI,IAAGC,GAAI,EAD5B;AAEI,MAAA,SAAS,EAAG,GAAES,UAAW,EAF7B;AAGI,MAAA,KAAK,EAAE;AAAE,mBAAY,GAAEC,WAAY,IAA5B;AAAiC,oBAAa,GAAEG,YAAa;AAA7D,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAjDyB;;AAoD9B,eAAenB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./point.css\";\n\nclass Point extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {\n            row,\n            col,\n            isStart,\n            isEnd,\n            isChecked,\n            isShortest,\n            width,\n            height,\n            numRows,\n            numColumns,\n        } = this.props;\n\n        const extraClass = isStart\n            ? \"point point-start\"\n            : isEnd\n                ? \"point point-finish\"\n                    : isShortest\n                        ? \"point point-shortest-path\"\n                        : isChecked\n                            ? \"point point-visited\"\n                            : \"point\";\n\n        let cercleWidth = Math.floor((width - 15) / numColumns);\n        let cercleHeight;\n        if (width > 1500) {\n            cercleHeight = Math.floor((height - 70) / numRows);\n        } else if (width > 1000) {\n            cercleHeight = Math.floor((height - 70) / numRows);\n        } else if (width > 500) {\n            cercleHeight = Math.floor((height - 60) / numRows);\n        } else if (width > 0) {\n            cercleHeight = Math.floor((height - 50) / numRows);\n        }\n\n        return (\n            <div\n                id={`point-${row}-${col}`}\n                className={`${extraClass}`}\n                style={{ \"--width\": `${cercleWidth}px`, \"--height\": `${cercleHeight}px` }}\n            ></div>\n        );\n    }\n}\n\nexport default Point;\n"]},"metadata":{},"sourceType":"module"}