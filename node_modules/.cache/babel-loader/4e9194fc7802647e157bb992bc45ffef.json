{"ast":null,"code":"import _classCallCheck from\"/Users/m/projfinal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/m/projfinal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/m/projfinal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/m/projfinal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./navbar.css\";var brand=window.innerWidth>600?\"Algorithme Dijkstra\":\"Dijkstra\";var NavBar=/*#__PURE__*/function(_Component){_inherits(NavBar,_Component);var _super=_createSuper(NavBar);function NavBar(){var _this;_classCallCheck(this,NavBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={algorithm:\"Algorithm Acting\",pathState:false,speedState:\"Speed\"};return _this;}_createClass(NavBar,[{key:\"selectAlgorithm\",value:function selectAlgorithm(selection){if(this.props.visualizingAlgorithm){return;}if(selection===this.state.algorithm||this.state.algorithm===\"Acting Algorithm\"||this.state.algorithm===\"Select an Algorithm!\"){this.setState({algorithm:selection});}else if(this.state.pathState){this.setState({algorithm:selection});}else{this.setState({algorithm:selection});}}},{key:\"visualizeAlgorithm\",value:function visualizeAlgorithm(){if(this.props.visualizingAlgorithm){return;}if(this.state.algorithm===\"ActingAlgorithm\"||this.state.algorithm===\"Select an Algorithm!\"){this.setState({algorithm:\"Select an Algorithm!\"});}else{this.setState({pathState:true});if(this.state.algorithm===\"See Dijkstra\")this.props.visualizeDijkstra();}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar navbar-expand navbar-dark bg-dark\"},/*#__PURE__*/React.createElement(\"a\",{className:\"navbar-brand h1 mb-0\",href:\"https://github.com/ingadnen/projetsfinal.git\"},brand),/*#__PURE__*/React.createElement(\"div\",{className:\"navbar-collapse\",id:\"navbarNavDropdown\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light dropdown-toggle\",type:\"button\",id:\"dropdownMenu1\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"},\"Algorithms\"),/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-menu\",\"aria-labelledby\":\"dropdownMenu1\"},/*#__PURE__*/React.createElement(\"button\",{className:\"dropdown-item btn-light\",type:\"button\",onClick:function onClick(){return _this2.selectAlgorithm(\"See Dijkstra\");}},\"Dijkstra's Algorithm\"))),\" \"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-success\",onClick:function onClick(){return _this2.visualizeAlgorithm();}},this.state.algorithm)))));}}]);return NavBar;}(Component);export default NavBar;","map":{"version":3,"sources":["/Users/m/projfinal/src/navbar.jsx"],"names":["React","Component","brand","window","innerWidth","NavBar","state","algorithm","pathState","speedState","selection","props","visualizingAlgorithm","setState","visualizeDijkstra","selectAlgorithm","visualizeAlgorithm"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,UAAP,CAAoB,GAApB,CAA0B,qBAA1B,CAAkD,UAAhE,C,GAEMC,CAAAA,M,2TACFC,K,CAAQ,CACJC,SAAS,CAAE,kBADP,CAEJC,SAAS,CAAE,KAFP,CAGJC,UAAU,CAAE,OAHR,C,iEAMR,yBAAgBC,SAAhB,CAA2B,CACvB,GAAI,KAAKC,KAAL,CAAWC,oBAAf,CAAqC,CACjC,OACH,CACD,GACIF,SAAS,GAAK,KAAKJ,KAAL,CAAWC,SAAzB,EACA,KAAKD,KAAL,CAAWC,SAAX,GAAyB,kBADzB,EAEA,KAAKD,KAAL,CAAWC,SAAX,GAAyB,sBAH7B,CAIE,CACE,KAAKM,QAAL,CAAc,CAAEN,SAAS,CAAEG,SAAb,CAAd,EACH,CAND,IAMO,IAAI,KAAKJ,KAAL,CAAWE,SAAf,CAA0B,CAC7B,KAAKK,QAAL,CAAc,CAAEN,SAAS,CAAEG,SAAb,CAAd,EACH,CAFM,IAEA,CACH,KAAKG,QAAL,CAAc,CAAEN,SAAS,CAAEG,SAAb,CAAd,EACH,CACJ,C,kCAID,6BAAqB,CACjB,GAAI,KAAKC,KAAL,CAAWC,oBAAf,CAAsC,CAClC,OACH,CACD,GACI,KAAKN,KAAL,CAAWC,SAAX,GAAyB,iBAAzB,EACA,KAAKD,KAAL,CAAWC,SAAX,GAAyB,sBAF7B,CAGE,CACE,KAAKM,QAAL,CAAc,CAAEN,SAAS,CAAE,sBAAb,CAAd,EACH,CALD,IAKO,CACH,KAAKM,QAAL,CAAc,CAAEL,SAAS,CAAE,IAAb,CAAd,EACA,GAAI,KAAKF,KAAL,CAAWC,SAAX,GAAyB,cAA7B,CACI,KAAKI,KAAL,CAAWG,iBAAX,GACP,CACJ,C,sBAGD,iBAAS,iBACL,mBACI,2BAAK,SAAS,CAAC,0CAAf,eACI,yBACI,SAAS,CAAC,sBADd,CAEI,IAAI,CAAC,8CAFT,EAIKZ,KAJL,CADJ,cAOI,2BAAK,SAAS,CAAC,iBAAf,CAAiC,EAAE,CAAC,mBAApC,eACI,0BAAI,SAAS,CAAC,YAAd,eACI,0BAAI,SAAS,CAAC,mBAAd,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,8BACI,SAAS,CAAC,+BADd,CAEI,IAAI,CAAC,QAFT,CAGI,EAAE,CAAC,eAHP,CAII,cAAY,UAJhB,CAKI,gBAAc,MALlB,CAMI,gBAAc,OANlB,eADJ,cAWI,2BAAK,SAAS,CAAC,eAAf,CAA+B,kBAAgB,eAA/C,eACI,8BACI,SAAS,CAAC,yBADd,CAEI,IAAI,CAAC,QAFT,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACa,eAAL,CAAqB,cAArB,CAAN,EAHb,yBADJ,CAXJ,CADJ,CAsBW,GAtBX,CADJ,cAyBI,2CACI,8BACI,IAAI,CAAC,QADT,CAEI,SAAS,CAAC,iBAFd,CAGI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,kBAAL,EAAN,EAHb,EAKK,KAAKV,KAAL,CAAWC,SALhB,CADJ,CAzBJ,CADJ,CAPJ,CADJ,CAgDH,C,oBA5FgBN,S,EA8FrB,cAAeI,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./navbar.css\";\n\nconst brand = window.innerWidth > 600 ? \"Algorithme Dijkstra\" : \"Dijkstra\";\n\nclass NavBar extends Component {\n    state = {\n        algorithm: \"Algorithm Acting\",\n        pathState: false,\n        speedState: \"Speed\",\n    };\n\n    selectAlgorithm(selection) {\n        if (this.props.visualizingAlgorithm) {\n            return;\n        }\n        if (\n            selection === this.state.algorithm ||\n            this.state.algorithm === \"Acting Algorithm\" ||\n            this.state.algorithm === \"Select an Algorithm!\"\n        ) {\n            this.setState({ algorithm: selection });\n        } else if (this.state.pathState) {\n            this.setState({ algorithm: selection });\n        } else {\n            this.setState({ algorithm: selection });\n        }\n    }\n\n\n\n    visualizeAlgorithm() {\n        if (this.props.visualizingAlgorithm ) {\n            return;\n        }\n        if (\n            this.state.algorithm === \"ActingAlgorithm\" ||\n            this.state.algorithm === \"Select an Algorithm!\"\n        ) {\n            this.setState({ algorithm: \"Select an Algorithm!\" });\n        } else {\n            this.setState({ pathState: true });\n            if (this.state.algorithm === \"See Dijkstra\")\n                this.props.visualizeDijkstra();\n        }\n    }\n\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                <a\n                    className=\"navbar-brand h1 mb-0\"\n                    href=\"https://github.com/ingadnen/projetsfinal.git\"\n                >\n                    {brand}\n                </a>\n                <div className=\"navbar-collapse\" id=\"navbarNavDropdown\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <div className=\"dropdown\">\n                                <button\n                                    className=\"btn btn-light dropdown-toggle\"\n                                    type=\"button\"\n                                    id=\"dropdownMenu1\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Algorithms\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                                    <button\n                                        className=\"dropdown-item btn-light\"\n                                        type=\"button\"\n                                        onClick={() => this.selectAlgorithm(\"See Dijkstra\")}\n                                    >\n                                        Dijkstra's Algorithm\n                                    </button>\n\n                                </div>\n                            </div>{\" \"}\n                        </li>\n                        <li>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-success\"\n                                onClick={() => this.visualizeAlgorithm()}\n                            >\n                                {this.state.algorithm}\n                            </button>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}